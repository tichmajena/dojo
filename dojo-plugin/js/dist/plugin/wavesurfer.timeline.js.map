{"version":3,"sources":["webpack://WaveSurfer.[name]/webpack/universalModuleDefinition","webpack://WaveSurfer.[name]/./src/plugin/timeline/index.js","webpack://WaveSurfer.[name]/webpack/bootstrap","webpack://WaveSurfer.[name]/webpack/startup"],"names":["TimelinePlugin","params","name","deferInit","instance","ws","container","document","querySelector","Error","wavesurfer","util","Object","assign","height","notchPercentHeight","labelPadding","unlabeledNotchColor","primaryColor","secondaryColor","primaryFontColor","secondaryFontColor","fontFamily","fontSize","duration","zoomDebounce","formatTimeCallback","defaultFormatTimeCallback","timeInterval","defaultTimeInterval","primaryLabelInterval","defaultPrimaryLabelInterval","secondaryLabelInterval","defaultSecondaryLabelInterval","offset","canvases","wrapper","drawer","pixelRatio","maxCanvasWidth","maxCanvasElementWidth","_onZoom","debounce","render","isReady","_onReady","once","unAll","un","_onRedraw","removeEventListener","_onScroll","parentNode","_onWrapperClick","removeChild","wsParams","innerHTML","appendChild","createElement","style","display","position","userSelect","webkitUserSelect","fillParent","scrollParent","width","overflowX","overflowY","addEventListener","createWrapper","updateCanvases","updateCanvasesPositioning","renderCanvases","canvas","push","zIndex","pop","parentElement","totalWidth","Math","round","scrollWidth","requiredCanvases","ceil","length","addCanvas","removeCanvas","canvasesLength","forEach","i","canvasWidth","left","backend","getDuration","totalSeconds","parseInt","getWidth","height1","height2","pixelsPerSecond","formatTime","intervalFnOrVal","option","curPixel","curSeconds","positioning","renderPositions","cb","pos","setFillStyles","setFonts","fillRect","fillText","fillStyle","getContext","font","x","y","leftOffset","intersection","x1","max","y1","x2","min","y2","text","textWidth","xOffset","context","measureText","seconds","pxPerSec","minutes","scrollLeft","on","e","preventDefault","relX","offsetX","layerX","fireEvent"],"mappings":"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","file":"wavesurfer.timeline.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"timeline\"] = factory();\n})(this, function() {\nreturn ","/**\r\n * @typedef {Object} TimelinePluginParams\r\n * @desc Extends the `WavesurferParams` wavesurfer was initialised with\r\n * @property {!string|HTMLElement} container CSS selector or HTML element where\r\n * the timeline should be drawn. This is the only required parameter.\r\n * @property {number} notchPercentHeight=90 Height of notches in percent\r\n * @property {string} unlabeledNotchColor='#c0c0c0' The colour of the notches\r\n * that do not have labels\r\n * @property {string} primaryColor='#000' The colour of the main notches\r\n * @property {string} secondaryColor='#c0c0c0' The colour of the secondary\r\n * notches\r\n * @property {string} primaryFontColor='#000' The colour of the labels next to\r\n * the main notches\r\n * @property {string} secondaryFontColor='#000' The colour of the labels next to\r\n * the secondary notches\r\n * @property {number} labelPadding=5 The padding between the label and the notch\r\n * @property {?number} zoomDebounce A debounce timeout to increase rendering\r\n * performance for large files\r\n * @property {string} fontFamily='Arial'\r\n * @property {number} fontSize=10 Font size of labels in pixels\r\n * @property {?number} duration Length of the track in seconds. Overrides\r\n * getDuration() for setting length of timeline\r\n * @property {function} formatTimeCallback (sec, pxPerSec) -> label\r\n * @property {function} timeInterval (pxPerSec) -> seconds between notches\r\n * @property {function} primaryLabelInterval (pxPerSec) -> cadence between\r\n * labels in primary color\r\n * @property {function} secondaryLabelInterval (pxPerSec) -> cadence between\r\n * labels in secondary color\r\n * @property {?number} offset Offset for the timeline start in seconds. May also be\r\n * negative.\r\n * @property {?boolean} deferInit Set to true to manually call\r\n * `initPlugin('timeline')`\r\n */\r\n\r\n/**\r\n * Adds a timeline to the waveform.\r\n *\r\n * @implements {PluginClass}\r\n * @extends {Observer}\r\n * @example\r\n * // es6\r\n * import TimelinePlugin from 'wavesurfer.timeline.js';\r\n *\r\n * // commonjs\r\n * var TimelinePlugin = require('wavesurfer.timeline.js');\r\n *\r\n * // if you are using <script> tags\r\n * var TimelinePlugin = window.WaveSurfer.timeline;\r\n *\r\n * // ... initialising wavesurfer with the plugin\r\n * var wavesurfer = WaveSurfer.create({\r\n *   // wavesurfer options ...\r\n *   plugins: [\r\n *     TimelinePlugin.create({\r\n *       // plugin options ...\r\n *     })\r\n *   ]\r\n * });\r\n */\r\nexport default class TimelinePlugin {\r\n    /**\r\n     * Timeline plugin definition factory\r\n     *\r\n     * This function must be used to create a plugin definition which can be\r\n     * used by wavesurfer to correctly instantiate the plugin.\r\n     *\r\n     * @param  {TimelinePluginParams} params parameters use to initialise the plugin\r\n     * @return {PluginDefinition} an object representing the plugin\r\n     */\r\n    static create(params) {\r\n        return {\r\n            name: 'timeline',\r\n            deferInit: params && params.deferInit ? params.deferInit : false,\r\n            params: params,\r\n            instance: TimelinePlugin\r\n        };\r\n    }\r\n\r\n    // event handlers\r\n    _onScroll = () => {\r\n        if (this.wrapper && this.drawer.wrapper) {\r\n            this.wrapper.scrollLeft = this.drawer.wrapper.scrollLeft;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @returns {void}\r\n     */\r\n    _onRedraw = () => this.render();\r\n\r\n    _onReady = () => {\r\n        const ws = this.wavesurfer;\r\n        this.drawer = ws.drawer;\r\n        this.pixelRatio = ws.drawer.params.pixelRatio;\r\n        this.maxCanvasWidth = ws.drawer.maxCanvasWidth || ws.drawer.width;\r\n        this.maxCanvasElementWidth =\r\n            ws.drawer.maxCanvasElementWidth ||\r\n            Math.round(this.maxCanvasWidth / this.pixelRatio);\r\n\r\n        // add listeners\r\n        ws.drawer.wrapper.addEventListener('scroll', this._onScroll);\r\n        ws.on('redraw', this._onRedraw);\r\n        ws.on('zoom', this._onZoom);\r\n\r\n        this.render();\r\n    };\r\n\r\n    /**\r\n     * @param {object} e Click event\r\n     */\r\n    _onWrapperClick = e => {\r\n        e.preventDefault();\r\n        const relX = 'offsetX' in e ? e.offsetX : e.layerX;\r\n        this.fireEvent('click', relX / this.wrapper.scrollWidth || 0);\r\n    };\r\n\r\n    /**\r\n     * Creates an instance of TimelinePlugin.\r\n     *\r\n     * You probably want to use TimelinePlugin.create()\r\n     *\r\n     * @param {TimelinePluginParams} params Plugin parameters\r\n     * @param {object} ws Wavesurfer instance\r\n     */\r\n    constructor(params, ws) {\r\n        this.container =\r\n            'string' == typeof params.container\r\n                ? document.querySelector(params.container)\r\n                : params.container;\r\n\r\n        if (!this.container) {\r\n            throw new Error('No container for wavesurfer timeline');\r\n        }\r\n\r\n        this.wavesurfer = ws;\r\n        this.util = ws.util;\r\n        this.params = Object.assign(\r\n            {},\r\n            {\r\n                height: 20,\r\n                notchPercentHeight: 90,\r\n                labelPadding: 5,\r\n                unlabeledNotchColor: '#c0c0c0',\r\n                primaryColor: '#000',\r\n                secondaryColor: '#c0c0c0',\r\n                primaryFontColor: '#000',\r\n                secondaryFontColor: '#000',\r\n                fontFamily: 'Arial',\r\n                fontSize: 10,\r\n                duration: null,\r\n                zoomDebounce: false,\r\n                formatTimeCallback: this.defaultFormatTimeCallback,\r\n                timeInterval: this.defaultTimeInterval,\r\n                primaryLabelInterval: this.defaultPrimaryLabelInterval,\r\n                secondaryLabelInterval: this.defaultSecondaryLabelInterval,\r\n                offset: 0\r\n            },\r\n            params\r\n        );\r\n\r\n        this.canvases = [];\r\n        this.wrapper = null;\r\n        this.drawer = null;\r\n        this.pixelRatio = null;\r\n        this.maxCanvasWidth = null;\r\n        this.maxCanvasElementWidth = null;\r\n        /**\r\n         * This event handler has to be in the constructor function because it\r\n         * relies on the debounce function which is only available after\r\n         * instantiation\r\n         *\r\n         * Use a debounced function if `params.zoomDebounce` is defined\r\n         *\r\n         * @returns {void}\r\n         */\r\n        this._onZoom = this.params.zoomDebounce\r\n            ? this.wavesurfer.util.debounce(\r\n                () => this.render(),\r\n                this.params.zoomDebounce\r\n            )\r\n            : () => this.render();\r\n    }\r\n\r\n    /**\r\n     * Initialisation function used by the plugin API\r\n     */\r\n    init() {\r\n        // Check if ws is ready\r\n        if (this.wavesurfer.isReady) {\r\n            this._onReady();\r\n        } else {\r\n            this.wavesurfer.once('ready', this._onReady);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Destroy function used by the plugin API\r\n     */\r\n    destroy() {\r\n        this.unAll();\r\n        this.wavesurfer.un('redraw', this._onRedraw);\r\n        this.wavesurfer.un('zoom', this._onZoom);\r\n        this.wavesurfer.un('ready', this._onReady);\r\n        this.wavesurfer.drawer.wrapper.removeEventListener(\r\n            'scroll',\r\n            this._onScroll\r\n        );\r\n        if (this.wrapper && this.wrapper.parentNode) {\r\n            this.wrapper.removeEventListener('click', this._onWrapperClick);\r\n            this.wrapper.parentNode.removeChild(this.wrapper);\r\n            this.wrapper = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create a timeline element to wrap the canvases drawn by this plugin\r\n     *\r\n     */\r\n    createWrapper() {\r\n        const wsParams = this.wavesurfer.params;\r\n        this.container.innerHTML = '';\r\n        this.wrapper = this.container.appendChild(\r\n            document.createElement('timeline')\r\n        );\r\n        this.util.style(this.wrapper, {\r\n            display: 'block',\r\n            position: 'relative',\r\n            userSelect: 'none',\r\n            webkitUserSelect: 'none',\r\n            height: `${this.params.height}px`\r\n        });\r\n\r\n        if (wsParams.fillParent || wsParams.scrollParent) {\r\n            this.util.style(this.wrapper, {\r\n                width: '100%',\r\n                overflowX: 'hidden',\r\n                overflowY: 'hidden'\r\n            });\r\n        }\r\n\r\n        this.wrapper.addEventListener('click', this._onWrapperClick);\r\n    }\r\n\r\n    /**\r\n     * Render the timeline (also updates the already rendered timeline)\r\n     *\r\n     */\r\n    render() {\r\n        if (!this.wrapper) {\r\n            this.createWrapper();\r\n        }\r\n        this.updateCanvases();\r\n        this.updateCanvasesPositioning();\r\n        this.renderCanvases();\r\n    }\r\n\r\n    /**\r\n     * Add new timeline canvas\r\n     *\r\n     */\r\n    addCanvas() {\r\n        const canvas = this.wrapper.appendChild(\r\n            document.createElement('canvas')\r\n        );\r\n        this.canvases.push(canvas);\r\n        this.util.style(canvas, {\r\n            position: 'absolute',\r\n            zIndex: 4\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Remove timeline canvas\r\n     *\r\n     */\r\n    removeCanvas() {\r\n        const canvas = this.canvases.pop();\r\n        canvas.parentElement.removeChild(canvas);\r\n    }\r\n\r\n    /**\r\n     * Make sure the correct of timeline canvas elements exist and are cached in\r\n     * this.canvases\r\n     *\r\n     */\r\n    updateCanvases() {\r\n        const totalWidth = Math.round(this.drawer.wrapper.scrollWidth);\r\n        const requiredCanvases = Math.ceil(\r\n            totalWidth / this.maxCanvasElementWidth\r\n        );\r\n\r\n        while (this.canvases.length < requiredCanvases) {\r\n            this.addCanvas();\r\n        }\r\n\r\n        while (this.canvases.length > requiredCanvases) {\r\n            this.removeCanvas();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update the dimensions and positioning style for all the timeline canvases\r\n     *\r\n     */\r\n    updateCanvasesPositioning() {\r\n        // cache length for performance\r\n        const canvasesLength = this.canvases.length;\r\n        this.canvases.forEach((canvas, i) => {\r\n            // canvas width is the max element width, or if it is the last the\r\n            // required width\r\n            const canvasWidth =\r\n                i === canvasesLength - 1\r\n                    ? this.drawer.wrapper.scrollWidth -\r\n                      this.maxCanvasElementWidth * (canvasesLength - 1)\r\n                    : this.maxCanvasElementWidth;\r\n            // set dimensions and style\r\n            canvas.width = canvasWidth * this.pixelRatio;\r\n            // on certain pixel ratios the canvas appears cut off at the bottom,\r\n            // therefore leave 1px extra\r\n            canvas.height = (this.params.height + 1) * this.pixelRatio;\r\n            this.util.style(canvas, {\r\n                width: `${canvasWidth}px`,\r\n                height: `${this.params.height}px`,\r\n                left: `${i * this.maxCanvasElementWidth}px`\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Render the timeline labels and notches\r\n     *\r\n     */\r\n    renderCanvases() {\r\n        const duration =\r\n            this.params.duration ||\r\n            this.wavesurfer.backend.getDuration();\r\n\r\n        if (duration <= 0) {\r\n            return;\r\n        }\r\n        const wsParams = this.wavesurfer.params;\r\n        const fontSize = this.params.fontSize * wsParams.pixelRatio;\r\n        const totalSeconds = parseInt(duration, 10) + 1;\r\n        const width =\r\n            wsParams.fillParent && !wsParams.scrollParent\r\n                ? this.drawer.getWidth()\r\n                : this.drawer.wrapper.scrollWidth * wsParams.pixelRatio;\r\n        const height1 = this.params.height * this.pixelRatio;\r\n        const height2 =\r\n            this.params.height *\r\n            (this.params.notchPercentHeight / 100) *\r\n            this.pixelRatio;\r\n        const pixelsPerSecond = width / duration;\r\n\r\n        const formatTime = this.params.formatTimeCallback;\r\n        // if parameter is function, call the function with\r\n        // pixelsPerSecond, otherwise simply take the value as-is\r\n        const intervalFnOrVal = option =>\r\n            typeof option === 'function' ? option(pixelsPerSecond) : option;\r\n        const timeInterval = intervalFnOrVal(this.params.timeInterval);\r\n        const primaryLabelInterval = intervalFnOrVal(\r\n            this.params.primaryLabelInterval\r\n        );\r\n        const secondaryLabelInterval = intervalFnOrVal(\r\n            this.params.secondaryLabelInterval\r\n        );\r\n\r\n        let curPixel = pixelsPerSecond * this.params.offset;\r\n        let curSeconds = 0;\r\n        let i;\r\n        // build an array of position data with index, second and pixel data,\r\n        // this is then used multiple times below\r\n        const positioning = [];\r\n        for (i = 0; i < totalSeconds / timeInterval; i++) {\r\n            positioning.push([i, curSeconds, curPixel]);\r\n            curSeconds += timeInterval;\r\n            curPixel += pixelsPerSecond * timeInterval;\r\n        }\r\n\r\n        // iterate over each position\r\n        const renderPositions = cb => {\r\n            positioning.forEach(pos => {\r\n                cb(pos[0], pos[1], pos[2]);\r\n            });\r\n        };\r\n\r\n        // render primary labels\r\n        this.setFillStyles(this.params.primaryColor);\r\n        this.setFonts(`${fontSize}px ${this.params.fontFamily}`);\r\n        this.setFillStyles(this.params.primaryFontColor);\r\n        renderPositions((i, curSeconds, curPixel) => {\r\n            if (i % primaryLabelInterval === 0) {\r\n                this.fillRect(curPixel, 0, 1, height1);\r\n                this.fillText(\r\n                    formatTime(curSeconds, pixelsPerSecond),\r\n                    curPixel + this.params.labelPadding * this.pixelRatio,\r\n                    height1\r\n                );\r\n            }\r\n        });\r\n\r\n        // render secondary labels\r\n        this.setFillStyles(this.params.secondaryColor);\r\n        this.setFonts(`${fontSize}px ${this.params.fontFamily}`);\r\n        this.setFillStyles(this.params.secondaryFontColor);\r\n        renderPositions((i, curSeconds, curPixel) => {\r\n            if (i % secondaryLabelInterval === 0) {\r\n                this.fillRect(curPixel, 0, 1, height1);\r\n                this.fillText(\r\n                    formatTime(curSeconds, pixelsPerSecond),\r\n                    curPixel + this.params.labelPadding * this.pixelRatio,\r\n                    height1\r\n                );\r\n            }\r\n        });\r\n\r\n        // render the actual notches (when no labels are used)\r\n        this.setFillStyles(this.params.unlabeledNotchColor);\r\n        renderPositions((i, curSeconds, curPixel) => {\r\n            if (\r\n                i % secondaryLabelInterval !== 0 &&\r\n                i % primaryLabelInterval !== 0\r\n            ) {\r\n                this.fillRect(curPixel, 0, 1, height2);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Set the canvas fill style\r\n     *\r\n     * @param {DOMString|CanvasGradient|CanvasPattern} fillStyle Fill style to\r\n     * use\r\n     */\r\n    setFillStyles(fillStyle) {\r\n        this.canvases.forEach(canvas => {\r\n            canvas.getContext('2d').fillStyle = fillStyle;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Set the canvas font\r\n     *\r\n     * @param {DOMString} font Font to use\r\n     */\r\n    setFonts(font) {\r\n        this.canvases.forEach(canvas => {\r\n            canvas.getContext('2d').font = font;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Draw a rectangle on the canvases\r\n     *\r\n     * (it figures out the offset for each canvas)\r\n     *\r\n     * @param {number} x X-position\r\n     * @param {number} y Y-position\r\n     * @param {number} width Width\r\n     * @param {number} height Height\r\n     */\r\n    fillRect(x, y, width, height) {\r\n        this.canvases.forEach((canvas, i) => {\r\n            const leftOffset = i * this.maxCanvasWidth;\r\n\r\n            const intersection = {\r\n                x1: Math.max(x, i * this.maxCanvasWidth),\r\n                y1: y,\r\n                x2: Math.min(x + width, i * this.maxCanvasWidth + canvas.width),\r\n                y2: y + height\r\n            };\r\n\r\n            if (intersection.x1 < intersection.x2) {\r\n                canvas\r\n                    .getContext('2d')\r\n                    .fillRect(\r\n                        intersection.x1 - leftOffset,\r\n                        intersection.y1,\r\n                        intersection.x2 - intersection.x1,\r\n                        intersection.y2 - intersection.y1\r\n                    );\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fill a given text on the canvases\r\n     *\r\n     * @param {string} text Text to render\r\n     * @param {number} x X-position\r\n     * @param {number} y Y-position\r\n     */\r\n    fillText(text, x, y) {\r\n        let textWidth;\r\n        let xOffset = 0;\r\n\r\n        this.canvases.forEach(canvas => {\r\n            const context = canvas.getContext('2d');\r\n            const canvasWidth = context.canvas.width;\r\n\r\n            if (xOffset > x + textWidth) {\r\n                return;\r\n            }\r\n\r\n            if (xOffset + canvasWidth > x) {\r\n                textWidth = context.measureText(text).width;\r\n                context.fillText(text, x - xOffset, y);\r\n            }\r\n\r\n            xOffset += canvasWidth;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Turn the time into a suitable label for the time.\r\n     *\r\n     * @param {number} seconds Seconds to format\r\n     * @param {number} pxPerSec Pixels per second\r\n     * @returns {number} Time\r\n     */\r\n    defaultFormatTimeCallback(seconds, pxPerSec) {\r\n        if (seconds / 60 > 1) {\r\n            // calculate minutes and seconds from seconds count\r\n            const minutes = parseInt(seconds / 60, 10);\r\n            seconds = parseInt(seconds % 60, 10);\r\n            // fill up seconds with zeroes\r\n            seconds = seconds < 10 ? '0' + seconds : seconds;\r\n            return `${minutes}:${seconds}`;\r\n        }\r\n        return Math.round(seconds * 1000) / 1000;\r\n    }\r\n\r\n    /**\r\n     * Return how many seconds should be between each notch\r\n     *\r\n     * @param {number} pxPerSec Pixels per second\r\n     * @returns {number} Time\r\n     */\r\n    defaultTimeInterval(pxPerSec) {\r\n        if (pxPerSec >= 25) {\r\n            return 1;\r\n        } else if (pxPerSec * 5 >= 25) {\r\n            return 5;\r\n        } else if (pxPerSec * 15 >= 25) {\r\n            return 15;\r\n        }\r\n        return Math.ceil(0.5 / pxPerSec) * 60;\r\n    }\r\n\r\n    /**\r\n     * Return the cadence of notches that get labels in the primary color.\r\n     *\r\n     * @param {number} pxPerSec Pixels per second\r\n     * @returns {number} Cadence\r\n     */\r\n    defaultPrimaryLabelInterval(pxPerSec) {\r\n        if (pxPerSec >= 25) {\r\n            return 10;\r\n        } else if (pxPerSec * 5 >= 25) {\r\n            return 6;\r\n        } else if (pxPerSec * 15 >= 25) {\r\n            return 4;\r\n        }\r\n        return 4;\r\n    }\r\n\r\n    /**\r\n     * Return the cadence of notches that get labels in the secondary color.\r\n     *\r\n     * @param {number} pxPerSec Pixels per second\r\n     * @returns {number} Cadence\r\n     */\r\n    defaultSecondaryLabelInterval(pxPerSec) {\r\n        if (pxPerSec >= 25) {\r\n            return 5;\r\n        } else if (pxPerSec * 5 >= 25) {\r\n            return 2;\r\n        } else if (pxPerSec * 15 >= 25) {\r\n            return 2;\r\n        }\r\n        return 2;\r\n    }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(\"./src/plugin/timeline/index.js\");\n"],"sourceRoot":""}