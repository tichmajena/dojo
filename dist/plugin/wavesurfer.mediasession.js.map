{"version":3,"sources":["webpack://WaveSurfer.[name]/webpack/universalModuleDefinition","webpack://WaveSurfer.[name]/./src/plugin/mediasession/index.js","webpack://WaveSurfer.[name]/webpack/bootstrap","webpack://WaveSurfer.[name]/webpack/startup"],"names":["MediaSessionPlugin","params","name","deferInit","instance","ws","wavesurfer","navigator","metadata","update","on","mediaSession","setActionHandler","play","playPause","skipBackward","skipForward","MediaMetadata","Function"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,CAAC;AACD,O;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACqBA,kB;;;;AACjB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;2BACkBC,M,EAAQ;AAClB,aAAO;AACHC,YAAI,EAAE,cADH;AAEHC,iBAAS,EAAEF,MAAM,IAAIA,MAAM,CAACE,SAAjB,GAA6BF,MAAM,CAACE,SAApC,GAAgD,KAFxD;AAGHF,cAAM,EAAEA,MAHL;AAIHG,gBAAQ,EAAEJ;AAJP,OAAP;AAMH;;;AAED,8BAAYC,MAAZ,EAAoBI,EAApB,EAAwB;AAAA;;AAAA;;AACpB,SAAKJ,MAAL,GAAcA,MAAd;AACA,SAAKK,UAAL,GAAkBD,EAAlB;;AAEA,QAAI,kBAAkBE,SAAtB,EAAiC;AAC7B;AACA,WAAKC,QAAL,GAAgB,KAAKP,MAAL,CAAYO,QAA5B;AACA,WAAKC,MAAL,GAH6B,CAK7B;;AACA,WAAKH,UAAL,CAAgBI,EAAhB,CAAmB,MAAnB,EAA2B,YAAM;AAC7B,aAAI,CAACD,MAAL;AACH,OAFD,EAN6B,CAU7B;;AACAF,eAAS,CAACI,YAAV,CAAuBC,gBAAvB,CAAwC,MAAxC,EAAgD,YAAM;AAClD,aAAI,CAACN,UAAL,CAAgBO,IAAhB;AACH,OAFD;AAGAN,eAAS,CAACI,YAAV,CAAuBC,gBAAvB,CAAwC,OAAxC,EAAiD,YAAM;AACnD,aAAI,CAACN,UAAL,CAAgBQ,SAAhB;AACH,OAFD;AAGAP,eAAS,CAACI,YAAV,CAAuBC,gBAAvB,CAAwC,cAAxC,EAAwD,YAAM;AAC1D,aAAI,CAACN,UAAL,CAAgBS,YAAhB;AACH,OAFD;AAGAR,eAAS,CAACI,YAAV,CAAuBC,gBAAvB,CAAwC,aAAxC,EAAuD,YAAM;AACzD,aAAI,CAACN,UAAL,CAAgBU,WAAhB;AACH,OAFD;AAGH;AACJ;;;;2BAEM,CAAE;;;8BAEC,CAAE;;;6BAEH;AACL,UAAI,QAAOC,aAAP,yCAAOA,aAAP,eAAgCC,QAAhC,yCAAgCA,QAAhC,EAAJ,EAA8C;AAC1C;AACAX,iBAAS,CAACI,YAAV,CAAuBH,QAAvB,GAAkC,IAAIS,aAAJ,CAAkB,KAAKT,QAAvB,CAAlC;AACH;AACJ;;;;;;;;;;;;;UC9FL;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;UCrBA;UACA;UACA;UACA","file":"wavesurfer.mediasession.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"mediasession\"] = factory();\n})(this, function() {\nreturn ","/*global MediaMetadata*/\r\n\r\n/**\r\n * @typedef {Object} MediaSessionPluginParams\r\n * @property {MediaMetadata} metadata A MediaMetadata object: a representation\r\n * of the metadata associated with a MediaSession that can be used by user agents\r\n * to provide a customized user interface.\r\n * @property {?boolean} deferInit Set to true to manually call\r\n * `initPlugin('mediasession')`\r\n */\r\n\r\n/**\r\n * Visualize MediaSession information for a wavesurfer instance.\r\n *\r\n * @implements {PluginClass}\r\n * @extends {Observer}\r\n * @example\r\n * // es6\r\n * import MediaSessionPlugin from 'wavesurfer.mediasession.js';\r\n *\r\n * // commonjs\r\n * var MediaSessionPlugin = require('wavesurfer.mediasession.js');\r\n *\r\n * // if you are using <script> tags\r\n * var MediaSessionPlugin = window.WaveSurfer.mediasession;\r\n *\r\n * // ... initialising wavesurfer with the plugin\r\n * var wavesurfer = WaveSurfer.create({\r\n *   // wavesurfer options ...\r\n *   plugins: [\r\n *     MediaSessionPlugin.create({\r\n *       // plugin options ...\r\n *     })\r\n *   ]\r\n * });\r\n */\r\nexport default class MediaSessionPlugin {\r\n    /**\r\n     * MediaSession plugin definition factory\r\n     *\r\n     * This function must be used to create a plugin definition which can be\r\n     * used by wavesurfer to correctly instantiate the plugin.\r\n     *\r\n     * @param  {MediaSessionPluginParams} params parameters use to initialise the plugin\r\n     * @return {PluginDefinition} an object representing the plugin\r\n     */\r\n    static create(params) {\r\n        return {\r\n            name: 'mediasession',\r\n            deferInit: params && params.deferInit ? params.deferInit : false,\r\n            params: params,\r\n            instance: MediaSessionPlugin\r\n        };\r\n    }\r\n\r\n    constructor(params, ws) {\r\n        this.params = params;\r\n        this.wavesurfer = ws;\r\n\r\n        if ('mediaSession' in navigator) {\r\n            // update metadata\r\n            this.metadata = this.params.metadata;\r\n            this.update();\r\n\r\n            // update metadata when playback starts\r\n            this.wavesurfer.on('play', () => {\r\n                this.update();\r\n            });\r\n\r\n            // set playback action handlers\r\n            navigator.mediaSession.setActionHandler('play', () => {\r\n                this.wavesurfer.play();\r\n            });\r\n            navigator.mediaSession.setActionHandler('pause', () => {\r\n                this.wavesurfer.playPause();\r\n            });\r\n            navigator.mediaSession.setActionHandler('seekbackward', () => {\r\n                this.wavesurfer.skipBackward();\r\n            });\r\n            navigator.mediaSession.setActionHandler('seekforward', () => {\r\n                this.wavesurfer.skipForward();\r\n            });\r\n        }\r\n    }\r\n\r\n    init() {}\r\n\r\n    destroy() {}\r\n\r\n    update() {\r\n        if (typeof MediaMetadata === typeof Function) {\r\n            // set metadata\r\n            navigator.mediaSession.metadata = new MediaMetadata(this.metadata);\r\n        }\r\n    }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(\"./src/plugin/mediasession/index.js\");\n"],"sourceRoot":""}